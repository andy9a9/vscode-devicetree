{
    "name": "DTS",
    "scopeName": "source.dts",
    "patterns": [
        {
            "comment": "Line comments",
            "match": "//.*$",
            "name": "comment.line.double-slash"
        },
        {
            "comment": "Include directories",
            "match": "(#include)(\\s+(<|\")([^>\"]*)(>|\"))",
            "captures": {
                "1": { "name": "keyword.control.directive.include" },
                "2": { "name": "string.quoted.include" },
                "3": { "name": "punctuation.definition.string.begin" },
                "4": { "name": "entity.name.include" },
                "5": { "name": "punctuation.definition.string.end" }
            }
        },
        {
            "comment": "Labels",
            "match": "^\\s*([0-9a-zA-Z_\\-+,.]+):",
            "captures": {
                "1": { "name": "entity.name.type" }
            }
        },
        {
            "comment": "Node names",
            "match": "(/|([[:alpha:][:digit:]\\-_]+)(@[0-9a-fA-F,]+)?)\\s*{",
            "captures": {
                "1": { "name": "entity.name.function" },
                "3": { "name": "entity.name.tag" }
            }
        },
        {
            "comment": "Cell properties",
            "begin": "<",
            "end": ">",
            "patterns": [
                {"include": "#reference"},
                {"include": "#number"},
                {"include": "#constant"},
                {"include": "#block-comment"}
            ]
        },
        {"include": "#reference"},
        {"include": "#string"},
        {"include": "#block-comment"}
    ],
    "repository": {
        "block-comment": {
            "comment": "Block comments",
            "begin": "/\\*",
            "end": "\\*/",
            "name": "comment.block"
        },
        "number": {
            "comment": "Numeric literals",
            "match": "(0x[0-9a-fA-F]+|[[:digit:]]+)",
            "name": "constant.numeric"
        },
        "reference": {
            "comment": "Node references",
            "match": "&[0-9a-zA-Z,._\\-+]+",
            "name": "variable.other"
        },
        "string": {
            "comment": "String literals",
            "match": "\".*?\"",
            "name": "string.quoted.double"
        },
        "constant": {
            "comment": "Constants and macros",
            "patterns": [
                {
                    "match": "\\b[A-Z_][A-Z0-9_]*\\b",
                    "name": "constant.language"
                }
            ]
        }
    }
}
